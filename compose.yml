services:

  frontend:
    container_name: storage_app_frontend
    build:
      context: ./docker
      dockerfile: frontend.Dockerfile
    tty: true
    command: "sh -c '/home/frontend/bin/init.sh'"
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/home/frontend
    depends_on:
      - backend

  backend:
    container_name: storage_app_backend
    build:
      context: ./docker
      dockerfile: backend.Dockerfile
    tty: true
    volumes:
      - ./backend:/var/www/html
    ports:
      - "8000:80"
    command: "sh -c 'bash /var/www/html/bin/init.sh && apache2-foreground'"
    depends_on:
      - database

  database:
    container_name: storage_app_database
    build:
      context: ./docker
      dockerfile: database.Dockerfile
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: main
      MYSQL_USER: docker
      MYSQL_PASSWORD: docker
      TZ: Asia/Tokyo
      LANG: C.UTF-8
    volumes:
      - ./database/mysql/mysql.conf:/etc/mysql/mysql.conf
      - ./database/mysql/lib:/var/lib/mysql
      - ./database/mysql/logs:/var/log/database
    platform: linux/amd64
  
  minio:
    image: minio/minio
    container_name: storage_app_minio
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - ./minio:/data
    environment:
      MINIO_ROOT_USER: docker
      MINIO_ROOT_PASSWORD: minio-docker
    command: server /data --console-address ":9001"
